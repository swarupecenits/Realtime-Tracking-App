steps:
  - step: 1
    title: Check if the browser supports geolocation
    description: |
      Use `navigator.geolocation` to check if geolocation is supported in the user's browser.
      If unsupported, notify the user.

  - step: 2
    title: Set geolocation options
    description: |
      Configure geolocation options with the following settings:
        - High accuracy enabled.
        - 5-second timeout for location fetching.
        - Disable caching.
      Use the `watchPosition` function to track the user's location continuously.

  - step: 3
    title: Emit location data
    description: |
      Emit latitude and longitude to the server via a WebSocket event named `send-location`.
      If an error occurs, log it to the console.

  - step: 4
    title: Initialize map using Leaflet
    description: |
      Initialize a Leaflet map centered at coordinates [0, 0] with a zoom level of 15.
      Add OpenStreetMap tiles to the map as a layer.

  - step: 5
    title: Create empty markers object
    description: |
      Initialize an empty object to store markers for each user. This will store user-specific marker details.

  - step: 6
    title: Handle incoming location data via WebSocket
    description: |
      On receiving location data:
        - Extract the user ID, latitude, and longitude.
        - Center the map on the new coordinates.
        - If a marker for the user exists, update its position on the map.
        - If no marker exists, create a new marker at the given coordinates and add it to the map.

  - step: 7
    title: Handle user disconnection
    description: |
      When a user disconnects:
        - Remove their marker from the map.
        - Delete the marker from the markers object.
